---
title: "Project Reference-- Operation Come to School"
date: '2023-11-23'
output:
  html_document:
    code_download: yes
    theme: readable
    toc: yes
    toc_depth: 4
    toc_float: yes
    number_sections: no
    collapsed: no
---

```{css, echo=FALSE}

#TOC::before {
  content: "";
  display: block;
  height: 50px;
  margin: 2em 20px 40px 20px;
  background-image: url("https://raw.githubusercontent.com/kenya-eie-wg/eie_wg_5ws/main/eie_wg_logo.png");
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
}
```

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, fig.width = 8)

library(tidyverse)
library(readxl) 
library(janitor)
library(viridis)
library(scales)
library(ggrepel)
library(flextable)
library(sf)
library(plotly)
library(patchwork)
library(ggsflabel)
library(DT)

options(scipen = 100)

`%out%` <- Negate(`%in%`)

# Fixing dates
name_to_date <- function(x) {
  lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}
```


```{r data}
adm2 <- read_csv("./data/adm2_reference.csv")

adm1 <- adm2 %>% 
  distinct(county, partner, adm1_pcode, fo) 

adm2_targets <- read_csv("./data/adm2_targets.csv") 

locations <- read_csv("./data/locations.csv")

pcode1_shape <- 
  sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp", 
          quiet = TRUE) %>% 
  clean_names()

pcode2_shape <- 
  sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm2_iebc_20191031.shp", 
          quiet = TRUE) %>% 
  clean_names() %>% 
  st_as_sf() %>%
  mutate(fo = case_when(adm1_en %in% c("Samburu", "Turkana", "West Pokot", "Baringo") ~ "Lodwar", 
                        adm1_en %in% c("Garissa", "Isiolo", "Mandera", "Marsabit", "Tana River", "Wajir") ~ "Garissa", 
                        adm1_en %in% c("Bungoma", "Narok") ~ "Kisumu", 
                        adm1_en %in% c("Nairobi", "Kilifi", "Kwale", "Kajiado") ~ "Nairobi"))

roads <- sf::st_read("./data/kenya_roads_filtered/kenya_roads_filtered.shp", 
          quiet = TRUE)

all_towns_shape <- 
  sf::st_read("./data/kenya_all_towns/kenya_all_towns_eeTVhKM.shp", 
          quiet = TRUE) %>% 
  clean_names() %>% 
  st_as_sf() %>%
  filter(town_type %in% c("City", "Municipality", "Township/Town", "Trading Centre"))



```




# Admin level 1

<br>

```{r version-for-deema, eval=FALSE}


adm1 %>% 
  group_by(county, adm1_pcode, fo) %>% 
  summarise(partners = paste0(partner, collapse = ", "), 
            .groups = "keep") %>% 
  mutate(n_partners = str_count(partners, ",") + 1) %>% 
  right_join(pcode1_shape, 
             by = c("adm1_pcode")) %>% 
  mutate(partners = ifelse(!is.na(partners), partners, ""), 
         county = ifelse(!is.na(county), county, "")) %>% 
  st_as_sf() %>% 
  ggplot() +
  geom_sf(aes(fill = fo), 
          size = .001, 
          colour = "grey90") +  
  geom_sf_text(aes(label = county),
               na.translate = FALSE) + 
  scale_fill_manual(breaks = c("Garissa",
                                  "Lodwar",
                                  "Kisumu",
                                  "Nairobi"),
                    values = c("#F8766D", "#7CAE00", "#00BFC4", "#C77CFF")) +
  
  theme_void() + 
  theme(plot.background = element_rect(fill = "white",
                                       colour = "white"), 
        plot.title = element_text(size = 15)) +
  labs(title = "Implementing partners of UNICEF in Operation Come to School", 
       fill = "Field office")

ggsave("./img/only_fos_no_partners_adm1_map.png", 
         height = 297, 
         width = 400, 
         units = c("mm"))
```



```{r}

adm1 %>% 
  group_by(county, adm1_pcode, fo) %>% 
  summarise(partners = paste0(partner, collapse = ", "), 
            .groups = "keep") %>% 
  mutate(n_partners = str_count(partners, ",") + 1) %>% 
  right_join(pcode1_shape, 
             by = c("adm1_pcode")) %>% 
  mutate(partners = ifelse(!is.na(partners), partners, ""), 
         county = ifelse(!is.na(county), county, "")) %>% 
  st_as_sf() %>% 
  ggplot() +
  geom_sf(aes(fill = fo), 
          size = .001, 
          colour = "grey90") +  
  geom_sf_text(aes(label = county),
               na.translate = FALSE, 
               size = 2.5, 
               colour = "grey20") + 
  geom_sf_label_repel(aes(label = paste0( str_wrap(partners, 25))), 
                na.translate = FALSE, 
                size = 1.5, 
                alpha = .6, 
                fill = "#fde725") +
  scale_fill_manual(breaks = c("Garissa",
                                  "Lodwar",
                                  "Kisumu",
                                  "Nairobi"),
                    values = c("#F8766D", "#7CAE00", "#00BFC4", "#C77CFF")) +
  
  theme_void() + 
  theme(plot.background = element_rect(fill = "white",
                                       colour = "white"), 
        plot.title = element_text(size = 15)) +
  labs(title = "Implementing partners of UNICEF in Operation Come to School", 
       fill = "Field office")

# ggsave("./img/implementing_partner_adm1_map.png", 
#          height = 297, 
#          width = 400, 
#          units = c("mm"))
```

Download map [here](https://github.com/kenya-eie-wg/operation_come_to_school_public/blob/main/img/implementing_partner_adm1_map.png)

<br><br><br>

# Breakdown of targets

## County-level targets

Only Save the Children has been able to provide county-level targets. All other partners have only provided an overall target for the project. As no targeting methodology has been provided, targets have been provisionally allocated based on the share of the number of poor persons per county. Poverty incidence may be found [here](https://statistics.knbs.or.ke/nada/index.php/catalog/123/download/579) and county populations originate from the [census](https://github.com/Shelmith-Kariuki/rKenyaCensus).

<br>

```{r}
adm2_targets %>% 
  group_by(fo, county) %>%
  summarise_at(vars(population, 
                    children_0_17, 
                    combined_target,
                    werk_target, 
                    fca_target, 
                    lisp_target, 
                    irck_target, 
                    so_target), 
               ~ sum(.x, na.rm = TRUE)) %>% 
  flextable() %>% 
  theme_zebra() %>% 
  set_caption("Targets and population by county") %>% 
  set_table_properties(layout = "autofit", width = .9) 
```

<br><br>

## Constituency-level targets

Targets at the constituency level (admin level 2) have been allocated based on the same methodology as above, with targets being in line with each constituency's share of poor persons. However, additional refinement is probably warranted since poverty incidence was only available at the county level, meaning that the number of poor persons per constituency was calculated based on the constituency population and the county-level poverty incidence. 

<br>


```{r}
adm2_targets %>% 
  select(county, constituency, 
         partners, population, 
         children_0_17, 
         target = combined_target, 
         adm2_pcode) %>% 
  datatable(options = list(pageLength = 20, scrollX = TRUE), 
            filter = list(position = "top", clear = FALSE), 
            caption = htmltools::tags$caption(style = 
                                                'caption-side: top; 
                                    text-align: center; font-size:120% ;',
                                    "Breakdown by constituency and implementing partner")) %>% 
  formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>% 
  formatStyle(columns = c(3), fontSize = "70%") %>% 
  formatCurrency(c("population", "children_0_17", "target"), 
                 currency = "", interval = 3, mark = ",") %>% 
  formatRound(c("population", "children_0_17", "target"), digits = 0)
```

<br>

Download the targets [here](https://github.com/kenya-eie-wg/operation_come_to_school_public/blob/main/data/adm2_targets.csv), with the raw version [here](https://raw.githubusercontent.com/kenya-eie-wg/operation_come_to_school_public/main/data/adm2_targets.csv). 


<br><br><br>


# Plots for field offices

```{r make-adm2-target-plot}

make_adm2_target_plot <- function(tbl, county_filter){
  
  tbl %>% 
    filter(!is.na(adm2_pcode) & county == county_filter) %>%
    right_join(pcode2_shape %>%  
               select(-fo) %>% 
               filter(adm1_en == county_filter),
               by = "adm2_pcode") %>%
    st_as_sf() %>% 
    ggplot() + 
    geom_sf(size = .001, colour = "grey70", 
            aes(fill = combined_target)) + 
    scale_fill_viridis(direction = -1, labels = comma, 
                       breaks = c(1000, 2000, 3000, 4000, 5000, 6000, 7000), 
                       limits = c(1, 7027), 
                       begin = .1, end = .9) + 
    # geom_sf(size = .1, colour = "#f5908e", alpha = .7,
    #         data = 
    #           roads %>% st_intersection(pcode1_shape %>% filter(adm1_en == county_filter))) +
    geom_point(aes(x = lon, y = lat), 
             data = all_towns_shape %>% 
               st_as_sf() %>% 
               mutate(lon = sf::st_coordinates(.)[,1],
                lat = sf::st_coordinates(.)[,2]) %>% 
               st_intersection(., pcode2_shape %>% filter(adm1_en == county_filter)) %>% 
               st_make_valid(), 
             colour = "#f04743", pch = 15, alpha = .75) +
    geom_sf_label_repel(aes(label = paste0(adm2_en, "\n", 
                                           "Target: ", comma(combined_target), "\n", 
                                           "Partners: ", str_wrap(partners, 25))), 
                na.translate = FALSE, 
                size = 1.5, 
                alpha = .6, 
                fill = "#f3f6f4",
                seed = 12) +
    theme_void() + 
    theme(plot.background = element_rect(fill = "white", 
                                         colour = "white"), 
          plot.title = element_text(size = 10), 
          plot.subtitle = element_text(size = 8)) +
    labs(title = paste0("Targets in ", county_filter),
         subtitle = "Red squares are town and cities; road network in pink",
         fill = "Target")
  
  
}
```



```{r make-adm2-pop-plot}

make_adm2_pop_plot <- function(tbl, county_filter) {
  
  tbl %>% 
    filter(county == county_filter) %>% 
    right_join(pcode2_shape %>% 
                 select(-fo) %>% 
                 filter(adm1_en == county_filter)) %>% 
    st_as_sf() %>% 
    ggplot() + 
    geom_sf(aes(fill = children_0_17), 
            size = 0.001, colour = "grey70") + 
    scale_fill_viridis(option = "mako", direction = -1, 
                       trans = "log10", 
                       labels = number_format(scale = 1/1000, suffix = "K"), 
                       begin = .1) + 
    # geom_sf(size = .1, colour = "#f5908e", alpha = .7,
    #         data = 
    #           roads %>% st_intersection(pcode1_shape %>% filter(adm1_en == county_filter))) +
    geom_point(aes(x = lon, y = lat), 
               data = all_towns_shape %>% 
                 st_as_sf() %>% 
                 mutate(lon = sf::st_coordinates(.)[,1],
                  lat = sf::st_coordinates(.)[,2]) %>% 
                 st_intersection(., pcode2_shape %>% filter(adm1_en == county_filter)) %>% 
                 st_make_valid(), 
               colour = "#f04743", pch = 15, alpha = .7) + 
    geom_sf_label_repel(aes(label = paste0(adm2_en, "\n",
                                           "Population: ", comma(population), "\n",
                                           "Children: ", comma(children_0_17), "\n", 
                                           "Poverty rate: ", poverty_incidence)), 
                  na.translate = FALSE, 
                  size = 1.5, 
                  alpha = .7, 
                  fill = "#f3f6f4", 
                  seed = 12) +
      theme_void() + 
      theme(plot.background = element_rect(fill = "white", 
                                           colour = "white"),
            plot.title = element_text(size = 10), 
          plot.subtitle = element_text(size = 8)) +
      labs(title = paste0("Total population in ", county_filter),
           subtitle = "Red squares are town and cities; road network in pink",
           fill = "Children")
    
}
```





## Garissa FO

```{r}
make_adm2_target_plot(adm2_targets, "Garissa") + make_adm2_pop_plot(adm2_targets, "Garissa")
```

<br><br>

```{r}
make_adm2_target_plot(adm2_targets, "Isiolo") + make_adm2_pop_plot(adm2_targets, "Isiolo")
```

<br><br>


```{r}
make_adm2_target_plot(adm2_targets, "Mandera") + make_adm2_pop_plot(adm2_targets, "Mandera")
```

<br><br>

```{r}
make_adm2_target_plot(adm2_targets, "Marsabit") + make_adm2_pop_plot(adm2_targets, "Marsabit")
```

<br><br>

```{r}
make_adm2_target_plot(adm2_targets, "Tana River") + make_adm2_pop_plot(adm2_targets, "Tana River")
```

<br><br>

```{r}
make_adm2_target_plot(adm2_targets, "Wajir") + make_adm2_pop_plot(adm2_targets, "Wajir")
```

<br><br><br>

## Kisumu FO

```{r}

# Not all 

adm2_targets %>%
  filter(!is.na(adm2_pcode) & county == "Bungoma") %>%
    right_join(pcode2_shape %>%  
               select(-fo) %>% 
               filter(adm1_en == "Bungoma"),
               by = "adm2_pcode") %>%
    st_as_sf() %>% 
    ggplot() + 
    geom_sf(size = .001, colour = "grey70", 
            aes(fill = combined_target)) + 
    scale_fill_viridis(direction = -1, labels = comma, 
                       breaks = c(1000, 2000, 3000, 4000, 5000, 6000, 7000), 
                       limits = c(1, 7027), 
                       begin = .1, end = .9) +
  # For some reason, the points are not matching the shape,
  # I'm leaving it like this for the time being
  # Until I figure out how to fix it
    # geom_point(aes(x = lon, y = lat), 
    # data = all_towns_shape %>% 
    # st_as_sf() %>% 
    # mutate(lon = sf::st_coordinates(.)[,1],
    # lat = sf::st_coordinates(.)[,2]) %>% 
    # st_intersection(., pcode2_shape %>% filter(adm1_en == county_filter)) %>% 
    # st_make_valid(), 
    # colour = "#f1605d", pch = 15) +
    geom_sf_label_repel(aes(label = paste0(adm2_en, "\n", 
                                           "Target: ", comma(combined_target), "\n", 
                                           "Partners: ", str_wrap(partners, 25))), 
                na.translate = FALSE, 
                size = 1.5, 
                alpha = .6, 
                fill = "#f3f6f4", 
                seed = 12) +
    theme_void() + 
    theme(plot.background = element_rect(fill = "white", 
                                           colour = "white"),
            plot.title = element_text(size = 10), 
          plot.subtitle = element_text(size = 8)) +
    labs(title = paste0("Targets in Operation Come to School, ", "Bungoma", " County"),
         fill = "Target") + 
  
adm2_targets %>%
  filter(county == "Bungoma") %>% 
    right_join(pcode2_shape %>% 
                 select(-fo) %>% 
                 filter(adm1_en == "Bungoma")) %>% 
    st_as_sf() %>% 
    ggplot() + 
    geom_sf(aes(fill = children_0_17), 
            size = 0.001, colour = "grey70") + 
    scale_fill_viridis(option = "mako", direction = -1, 
                       trans = "log10", 
                       labels = number_format(scale = 1/1000, suffix = "K"), 
                       begin = .1) + 
  # Same as above
    # geom_point(aes(x = lon, y = lat), 
    #            data = all_towns_shape %>% 
    #              st_as_sf() %>% 
    #              mutate(lon = sf::st_coordinates(.)[,1],
    #               lat = sf::st_coordinates(.)[,2]) %>% 
    #              st_intersection(., pcode2_shape %>% filter(adm1_en == "Bungoma")) %>% 
    #              st_make_valid(), 
    #            colour = "#f1605d", pch = 15, alpha = .75) + 
    geom_sf_label_repel(aes(label = paste0(adm2_en, "\n", 
                                             "Population: ", comma(population), "\n", 
                                             "Children <18: ", comma(children_0_17))), 
                  na.translate = FALSE, 
                  size = 1.5, 
                  alpha = .6, 
                  fill = "#f3f6f4", 
                  seed = 12) +
      theme_void() + 
      theme(plot.background = element_rect(fill = "white", 
                                           colour = "white"),
            plot.title = element_text(size = 10), 
          plot.subtitle = element_text(size = 8)) +
      labs(title = paste0("Total population and children in, ", "Bungoma", " County"),
           fill = "Target")
```

<br><br>



```{r}
make_adm2_target_plot(adm2_targets, "Narok") + make_adm2_pop_plot(adm2_targets, "Narok")
```


<br><br><br>


## Lodwar FO

<br>


```{r}
make_adm2_target_plot(adm2_targets, "Baringo") + make_adm2_pop_plot(adm2_targets, "Baringo")
```

<br><br>

```{r}
make_adm2_target_plot(adm2_targets, "Samburu") + make_adm2_pop_plot(adm2_targets, "Samburu")
```

<br><br>

```{r}
make_adm2_target_plot(adm2_targets, "Turkana") + make_adm2_pop_plot(adm2_targets, "Turkana")
```

<br><br>

```{r}
make_adm2_target_plot(adm2_targets, "West Pokot") + make_adm2_pop_plot(adm2_targets, "West Pokot")
```


<br><br><br>


## Nairobi FO

<br>

```{r}
make_adm2_target_plot(adm2_targets, "Kajiado") + make_adm2_pop_plot(adm2_targets, "Kajiado")
```

<br><br>

```{r}
make_adm2_target_plot(adm2_targets, "Kilifi") + make_adm2_pop_plot(adm2_targets, "Kilifi")
```

<br><br>

```{r}
make_adm2_target_plot(adm2_targets, "Kwale") + make_adm2_pop_plot(adm2_targets, "Kwale")
```


<br><br>

```{r}
make_adm2_target_plot(adm2_targets, "Nairobi") + make_adm2_pop_plot(adm2_targets, "Nairobi")
```

<br><br><br>

























